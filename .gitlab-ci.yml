stages:
  - test
  - build
  - deploy

build:
  image: node:14
  stage: build
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  script:
    - set -e
    - npm ci --cache .npm --prefer-offline
    - npm run generate
    - cp -r dist public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "staging"'

.deploy:
  stage: deploy
  image: eeacms/rsync:2.3
  artifacts:
    paths:
      - public
  script:
    - rsync -Pavp --rsh="ssh -p ${SSH_PORT} -i ${SSH_KEY} -o StrictHostKeyChecking=no" ${CI_PROJECT_DIR}/public/* ${SSH_USER}@${SSH_IP}:/home/adopotvj/public_html${DEPLOY_PATH}

deploy_main:
  extends:
    - .deploy
  variables:
    DEPLOY_PATH: "adoptingbitcoin/2022"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy_staging:
  extends:
    - .deploy
  variables:
    DEPLOY_PATH: "adoptingbitcoin-staging/2022"
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'


purge_cache:
  image: curlimages/curl:7.78.0
  stage: .post
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "staging"'
  script:
    - |
      set -e
      curl -X "POST" "https://api.cloudflare.com/client/v4/zones/${CF_ZONE}/purge_cache" \
           -H "X-Auth-Email: ${CF_EMAIL}" \
           -H "Authorization: Bearer ${CF_PURGE_KEY}" \
           -H 'Content-Type: application/json' \
           -d $'{
        "purge_everything": true
      }'



